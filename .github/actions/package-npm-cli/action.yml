name: 'Package CLI project'
description: 'Package the dotCMS CLI as an NPM project.'
inputs:
  branch:
    description: 'Branch to build from'
    required: false
    default: 'master'
  github-token:
    description: 'GitHub Token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}

    - name: Download latest artifact
      id: deployment-status
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ inputs.github-token }}
        workflow: deployment-trunk.yml
        branch: master
        workflow_conclusion: success
        search_artifacts: true
        name: trunk_latest_sha
        path: .
        if_no_artifact_found: warn
        
    - name: Set options for artifact lookup
      id: lookup-type
      run: |
        branch=''
        runid='${{ github.event.inputs.build_run_id || github.event.workflow_run.id }}'
        search_artifacts=false
        if [[ "$runid" == "" ]]; then
          branch='master'
          runid=''
          search_artifacts=true
        fi

        echo "branch=$branch" >> $GITHUB_OUTPUT
        echo "runid=$runid" >> $GITHUB_OUTPUT
        echo "search_artifacts=$search_artifacts" >> $GITHUB_OUTPUT
      shell: bash        
          
    - name: Download Build Status
      id: data-download
      uses: dawidd6/action-download-artifact@v2
      with:
        name: 'workflow-data'
        workflow: maven-cicd-pipeline.yml
        workflow_conclusion: success
        branch: ${{ steps.lookup-type.outputs.branch }}
        event: push
        run_id: ${{ steps.lookup-type.outputs.runid }}
        search_artifacts: ${{ steps.lookup-type.outputs.search_artifacts }}
        if_no_artifact_found: warn

    - name: 'Download all build artifacts'
      id: download-cli-artifacts
      uses: dawidd6/action-download-artifact@v2
      with:
        name: cli-artifacts-*
        name_is_regexp: true        
        workflow: maven-cicd-pipeline.yml
        workflow_conclusion: success
        branch: ${{ steps.lookup-type.outputs.branch }}
        event: push
        run_id: ${{ steps.lookup-type.outputs.runid }}
        search_artifacts: ${{ steps.lookup-type.outputs.search_artifacts }}
        if_no_artifact_found: warn     

    - name: 'List CLI Artifacts'
      if: ${{ steps.download-cli-artifacts.outputs.found_artifact == true }}
      run: |
        ls -R ${{ github.workspace }}/artifacts
      shell: bash
