name: 'SDK Publish NPM Packages'
description: 'Publish the dotCMS SDK libs on NPM registry.'
inputs:
  ref:
    description: 'Branch to build from'
    required: false
    default: 'master'
  node-version:
    description: 'Node.js version'
    required: false
    default: '19'
runs:
  using: "composite"
  steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}

    - name: 'Set up Node.js'
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    # - name: 'Install dependencies'
    #   working-directory: ${{ github.workspace }}/core-web
    #   run: npm install
    #   shell: bash

    - name: 'Get current version from NPM'
      id: current_version
      run: |
       echo "::group::Get current version"
       CURRENT_VERSION=$(npm view @dotcms/client dist-tags --json | jq -r '.alpha')
       echo "Current version: $CURRENT_VERSION"
       echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
       echo "::endgroup::"
      shell: bash

    - name: Calculate next version
      id: next_version
      env:
       CURRENT_VERSION: ${{ steps.current_version.outputs.current_version }}
      run: |
       echo "::group::Calculate next version"
       VERSION_PARTS=(${CURRENT_VERSION//./ })
       BASE_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
       ALPHA_PART=${VERSION_PARTS[3]#*-}
       ALPHA_NUMBER=${ALPHA_PART#*.}
       NEW_ALPHA_NUMBER=$((ALPHA_NUMBER + 1))
       NEXT_VERSION="${BASE_VERSION}.${NEW_ALPHA_NUMBER}"
       echo "Next version: $NEXT_VERSION"
       echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT
       echo "::endgroup::"
      shell: bash

    - name: 'Printing versions'
      working-directory: ${{ github.workspace }}/core-web/libs/sdk/
      env:
       NEXT_VERSION: ${{ steps.next_version.outputs.next_version }}
       CURRENT_VERSION: ${{ steps.current_version.outputs.current_version }}
      run: |
        echo "::group::Update versions"
        echo "Current version: $CURRENT_VERSION"
        echo "Next version: $NEXT_VERSION"
        echo "::endgroup::"
      shell: bash

    - name: 'Update versions and dependencies'
      working-directory: ${{ github.workspace }}/core-web/libs/sdk/
      env:
       NEXT_VERSION: ${{ steps.next_version.outputs.next_version }}
      run: |
        echo "Updating version to $NEXT_VERSION"
        # npm version $NEXT_VERSION --no-git-tag-version
        SDKS=$(ls -ls | awk '{ print$10 }' | tr "," "\n")
        for dir in $(echo $SDKS);
        do
          echo "Updating $dir"
          $(cd $dir && npm version $NEXT_VERSION --no-git-tag-version)
        done
        # npm install
      shell: bash

    - name: 'Show packages'
      working-directory: ${{ github.workspace }}/core-web/libs/sdk/
      run: |
        SDKS=$(ls -ls | awk '{ print$10 }' | tr "," "\n")
        for dir in $(echo $SDKS);
        do
          echo "Showing $dir"
          npm view ./${dir} versions --json
        done
      shell: bash
