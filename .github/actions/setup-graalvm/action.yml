name: 'Setup GraalVM'
description: 'Setup GraalVM for Quarkus Native Images'
runs:
  using: 'composite'
  steps:
    # Sets up GRAALVM for native image compilation (Linux/macOS)
    # Downloads and installs GRAALVM
    # Configures environment variables
    - name: 'Set up GRAALVM for ${{ runner.os }}'
      if: ${{ runner.os != 'Windows' }}
      shell: bash
      run: |
        CURRENT_JAVA_VERSION=$(java -version 2>&1 | awk -F[\"\"] '/version/ {print $2}' | awk -F[.] '{print $1}')
        
        if [ "$CURRENT_JAVA_VERSION" == "11" ]; then
          echo "Using GRAALVM_VERSION=22.3.1 for Java 11"
          GRAALVM_VERSION=22.3.1
          if [ "${{ runner.os }}" == "Linux" ]; then
            ARCH=amd64
            PLATFORM=linux
            INSTALLATION_PATH=/usr/lib/jvm
          else
            if [ "$(uname -m)" == "arm64" ]; then
              ARCH=aarch64
            else
              ARCH=amd64
            fi
            PLATFORM=darwin
            INSTALLATION_PATH=/Library/Java/JavaVirtualMachines
          fi

          wget https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-${PLATFORM}-${ARCH}-${GRAALVM_VERSION}.tar.gz
          sudo mkdir -p $INSTALLATION_PATH
          tar -xzf graalvm-ce-java11-${PLATFORM}-${ARCH}-${GRAALVM_VERSION}.tar.gz
          sudo mv graalvm-ce-java11-${GRAALVM_VERSION} $INSTALLATION_PATH

          if [ "${{ runner.os }}" != "Linux" ]; then
            sudo xattr -r -d com.apple.quarantine ${INSTALLATION_PATH}/graalvm-ce-java11-${GRAALVM_VERSION}/Contents/Home
            GRAALVM_HOME="${INSTALLATION_PATH}/graalvm-ce-java11-${GRAALVM_VERSION}/Contents/Home"
          else
            GRAALVM_HOME="${INSTALLATION_PATH}/graalvm-ce-java11-${GRAALVM_VERSION}"
          fi

          echo "GRAALVM_HOME=$GRAALVM_HOME" >> $GITHUB_ENV
          echo "JAVA_HOME=$GRAALVM_HOME" >> $GITHUB_ENV
          echo "PATH=$GRAALVM_HOME/bin:$PATH" >> $GITHUB_ENV
          gu install native-image

        else
          echo "Using sdkman to install GraalVM"
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"

          current_version=$(sdk current java | sed 's/Using java version //' | tr -d '\n')

          if [ "$CURRENT_JAVA_VERSION" == "21" ]; then
            sdk install java 21.0.2-graalce
            GRAALVM_HOME=$(sdk home java 21.0.2-graalce)
          elif [ "$CURRENT_JAVA_VERSION" == "22" ]; then
            sdk install java 22.0.1-graalce
            GRAALVM_HOME=$(sdk home java 22.0.1-graalce)
          fi

          echo "GRAALVM_HOME=$GRAALVM_HOME" >> $GITHUB_ENV
          gu install native-image
          sdk use java $current_version
        fi

    - name: 'Set up GRAALVM for (Windows)'
      if: ${{ inputs.buildNativeImage == true && runner.os == 'Windows' }}
      shell: pwsh
      run: |
        $CURRENT_JAVA_VERSION = (java -version 2>&1 | Select-String -Pattern 'version' | ForEach-Object { $_.Matches.Groups[1].Value } -split '\.' | Select-Object -First 1)
        $SDKMAN_DIR = "$env:USERPROFILE\.sdkman"
        if (-Not (Test-Path -Path $SDKMAN_DIR)) {
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.sdkman.io')
        }

        $env:SDKMAN_DIR = $SDKMAN_DIR
        . "$SDKMAN_DIR\bin\sdkman-init.sh"

        $current_version = & sdk current java | ForEach-Object { $_ -replace 'Using java version ', '' } | Out-String

        if ($CURRENT_JAVA_VERSION -eq "11") {
          $ARCH="amd64"
          $GRAALVM_VERSION="22.3.1"
          $DOWNLOAD_URL="https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-windows-${ARCH}-${GRAALVM_VERSION}.zip"
          $OUTPUT_PATH="C:\graalvm-ce-java11-windows-${ARCH}-${GRAALVM_VERSION}.zip"
          $GRAALVM_INSTALLATION_PATH="C:\Program Files (x86)\Java"

          Invoke-WebRequest -Uri $DOWNLOAD_URL -OutFile $OUTPUT_PATH

          if (-Not (Test-Path -Path $GRAALVM_INSTALLATION_PATH -PathType Container)) {
            New-Item -ItemType Directory -Path $GRAALVM_INSTALLATION_PATH
          }

          Expand-Archive -Path $OUTPUT_PATH -DestinationPath $GRAALVM_INSTALLATION_PATH
          $env:JAVA_HOME="${GRAALVM_INSTALLATION_PATH}\graalvm-ce-java11-${GRAALVM_VERSION}"
          $env:Path="${env:Path};${env:JAVA_HOME}\bin"
        
          echo "JAVA_HOME=${env:JAVA_HOME}" >> "$env:GITHUB_ENV"
          echo "Path=${env:Path}" >> "$env:GITHUB_ENV"
          gu.cmd install native-image
        } else {
          if ($CURRENT_JAVA_VERSION -eq "21") {
            sdk install java 21.0.2-graalce
            $GRAALVM_HOME = & sdk home java 21.0.2-graalce
          } elseif ($CURRENT_JAVA_VERSION -eq "22") {
            sdk install java 22.0.1-graalce
            $GRAALVM_HOME = & sdk home java 22.0.1-graalce
          }

          echo "GRAALVM_HOME=$GRAALVM_HOME" >> "$env:GITHUB_ENV"
          gu.cmd install native-image
          sdk use java $current_version
        }